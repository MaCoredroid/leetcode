class MaxStack {
public:
    stack<int> key;
    stack<int> maxkey;
    /** initialize your data structure here. */
    MaxStack() {
        
    }
    
    void push(int x) {
        key.push(x);
        if(maxkey.size()>0)
        {
            maxkey.push(max(x,maxkey.top()));
        }
        else
        {
            maxkey.push(x);
        }
    }
    
    int pop() {
        maxkey.pop();
        int temp=key.top();
        key.pop();
        return temp;
    }
    
    int top() {
        return key.top();
    }
    
    int peekMax() {
        return maxkey.top();
    }
    
    int popMax() {
        vector<int> temp;
        while(key.top()!=maxkey.top())
        {
            temp.push_back(key.top());
            key.pop();
            maxkey.pop();
        }
        int value = key.top();
        key.pop();
        maxkey.pop();
        for(int i=temp.size()-1;i>=0;i--)
        {
            push(temp[i]);
        }
        return value;
    }
};

/**
 * Your MaxStack object will be instantiated and called as such:
 * MaxStack* obj = new MaxStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->peekMax();
 * int param_5 = obj->popMax();
 */