class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        List<Integer> num_list= new ArrayList<>();
        for(int num:nums)
        {
            num_list.add(num);
        }
        backTrack(res,num_list,0);
        return res;
    }

    public void backTrack(List<List<Integer>> res, List<Integer> ans, int start)
    {
        if(start==ans.size())
        {
            res.add(new ArrayList<Integer>(ans));
            return;
        }
        for(int j=start;j<ans.size();j++)
        {
            
            Collections.swap(ans,start,j);
            backTrack(res,ans,start+1);
            Collections.swap(ans,j,start);
            
        }
    }
}