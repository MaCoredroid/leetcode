/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root, vector<int> &sorted,double target,int k)
    {
        if(root!=NULL)
        {
            dfs(root->left,sorted,target,k);
            if(sorted.size()==k&&(target-sorted[0])<=(root->val)-target)
            {
                return;
            }
            sorted.push_back(root->val);
            if(sorted.size()>k) 
            {
                sorted.erase(sorted.begin(),sorted.begin()+1);
            }
                
            
            dfs(root->right,sorted,target,k);
        }
    }
    vector<int> closestKValues(TreeNode* root, double target, int k) {
        vector<int> sorted;
        dfs(root,sorted,target, k);
        return sorted;
    }
};