
class Solution {
public:
    bool validTree(int n, vector<vector<int>>& edges) {
        vector<vector<int>> key (n,vector<int>(n,0));
        for(vector<int> edge:edges)
        {
            key[edge[0]][edge[1]]=1;
            key[edge[1]][edge[0]]=1;
        }
        queue<int> q;
        q.push(0);
        vector<bool> visited(n,false);
        while(!q.empty())
        {
            int temp =q.front();
            q.pop();
            visited[temp]=true;
            for(int i=0;i<n;i++)
            {
                if(key[temp][i]==1)
                {
                    if(visited[i]==true)
                    {
                        return false;
                    }
                    visited[i]=true;
                    key[temp][i]=0;
                    key[i][temp]=0;
                    q.push(i);
                }
                
            }

        }
        for(int i=0;i<n;i++)
        {
            if(visited[i]==false)
            {
                return false;
            }
        }
        return true;
    }
};