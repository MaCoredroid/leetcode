class RandomizedSet {
public:
    vector<int> data;
    map<int,int> key;
    /** Initialize your data structure here. */
    RandomizedSet() {
        
    }
    
    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    bool insert(int val) {
        if(key.find(val)==key.end())
        {
            key[val]=data.size();
            data.push_back(val);
            return true;
        }
        else
        {
            return false;
        }
        
    }
    
    /** Removes a value from the set. Returns true if the set contained the specified element. */
    bool remove(int val) {
        if(key.find(val)!=key.end())
        {
            int temp=data[data.size()-1];
            int ans=data[key[val]];
            data[key[val]] = temp;
            key[temp] = key[val];
            key.erase(val);
            data.pop_back();
            return true;
        }
        else
        {
            return false;
        }
    }
    
    /** Get a random element from the set. */
    int getRandom() {
        if(data.size()==0)
        {
            return 0;
        }
        return data[rand()%data.size()];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */